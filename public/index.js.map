{"version":3,"file":"index.js","mappings":"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","sources":["webpack://awc-ui/./src/ui/index.ts"],"sourcesContent":["const SPACE = \"&nbsp;\";\n\nclass GraphQLValidator {\n  private input: Lazy<HTMLTextAreaElement>;\n  private output: Lazy<HTMLElement>;\n\n  constructor(inputID: string, outputID: string) {\n    this.input = new Lazy(() => <HTMLTextAreaElement>document.getElementById(inputID));\n    this.output = new Lazy(() => <HTMLElement>document.getElementById(outputID));\n  }\n\n  async start() {\n    await this.validate();\n    this.input.handle.addEventListener(\"keyup\", async () => { await this.validate() });\n  }\n\n  async validate() {\n    const graphql = this.input.handle.value.toString();\n    const graphqlLines = graphql.split(\"\\n\");\n    console.log(\"validating\");\n    const output = await fetch('/', {\n      method: \"POST\",\n      body: graphql\n    });\n    const json = await output.json();\n    let pretties: [string?] = [];\n    const diagnostics = json[\"diagnostics\"];\n    if (diagnostics.length > 0) {\n      for (const diagnostic of diagnostics) {\n        // error | warning | advice\n        const severity = diagnostic[\"severity\"];\n        let severityColor = \"text-info\";\n        let severityEmoji = \"üí°\";\n        switch (severity) {\n          case \"warning\": {\n            severityColor = \"text-warning\"\n            severityEmoji = \"‚ö†Ô∏è\";\n            break;\n          }\n          case \"error\": {\n            severityColor = \"text-error\"\n            severityEmoji = \"‚ùå\";\n            break;\n          }\n        }\n  \n        // start building up the diagnostic div\n        let inner = `<code class=\"m-3 block whitespace-pre overflow-x-scroll\">`;\n  \n        // apollo-compiler validation error\n        const code = diagnostic[\"code\"];\n        inner += `<span class=${severityColor}>${code}</span>`\n  \n        // cannot find type `Result` in this document\n        const message = diagnostic[\"message\"];\n        inner += `<br/><span class=\"text-content\">${SPACE}${severityEmoji}${SPACE}${message}</span>`\n  \n        // now for the hard part,\n        // we are taking the offset and length\n        // and putting the diagnostic in the context\n        // of the source\n        const labels = diagnostic[\"labels\"];\n        for (const l of labels) {\n          console.log(\"reading labels\")\n          const labelSpan = l[\"span\"];\n  \n          // 34\n          let labelOffset = labelSpan[\"offset\"];\n\n          // 6\n          const labelLength = labelSpan[\"length\"];\n\n          let lineIdx = 0;\n          let inline: [{maybeLineIdx: number, maybeHighlightSpace: string, maybeLine: string}?] = [];\n          let lastLine = false;\n          for (let graphqlLine of graphqlLines) {\n            let maybeHighlightSpace = \"\";\n            lineIdx += 1;\n            let maybeLine = \"\"\n            if (labelOffset > 0 || lastLine) {\n              maybeLine += `<br/><span class=\"secondary-content\">${SPACE}${lineIdx}${SPACE}|</span><span class=\"primary-content\">${SPACE}${SPACE}`;\n              console.log(`graphqlLine: ${graphqlLine}`)\n              for (let i = 0; i < graphqlLine.length; i++) {\n                maybeLine += graphqlLine.charAt(i)\n                labelOffset -= 1\n                if (labelOffset > -2) {\n                  maybeHighlightSpace += SPACE\n                }\n              }\n              maybeLine += \"</span>\"\n            }\n            console.log(`labelOffset: ${labelOffset}`)\n            console.log(`maybeLine: ${maybeLine}`)\n            console.log(`highlightSpace: ${maybeHighlightSpace}`)\n            inline.push({maybeLine, maybeLineIdx: lineIdx, maybeHighlightSpace});\n            if (labelOffset <= 0 && !lastLine) {\n              lastLine = true\n            } else if (lastLine) {\n              break\n            }\n          }\n\n          let realHighlightSpace = \"\";\n          for (const maybeInline of inline.slice(-4)) {\n            console.log(`maybeInline: ${JSON.stringify(maybeInline)}`)\n            if (maybeInline) {\n              const { maybeLineIdx, maybeHighlightSpace, maybeLine } = maybeInline\n              inner += maybeLine\n              if (maybeLineIdx == lineIdx - 1) {\n                realHighlightSpace = maybeHighlightSpace\n                let highlight = \"\"\n                let labelSpace = \"\"\n                for (let i = 0; i < labelLength; i++) {\n                  highlight += \"‚îÄ\"\n                  if (i < (labelLength / 2)) {\n                    labelSpace += SPACE\n                  }\n                }\n                inner += `<br/><span class=\"text-info\">${SPACE}${SPACE}${SPACE}¬∑${realHighlightSpace}${highlight}</span>`\n        \n                // not found in this scope\n                const label = l[\"label\"];\n                inner += `<br/><span class=\"text-info\">${SPACE}${SPACE}${SPACE}¬∑${realHighlightSpace}${labelSpace}‚ï∞‚îÄ‚îÄ${label}</span>`\n              }\n            }\n          }\n          \n  \n        }\n        inner += \"</code>\"\n        pretties.push(inner);\n      }\n      this.output.handle.innerHTML = pretties.join(\"\");\n    } else {\n      this.output.handle.innerHTML = `<code class=\"text-success center\">‚úÖ Your GraphQL is looking great!</span>`\n    }\n\n  }\n}\n\ninterface ILazyInitializer<T> {\n  (): T\n}\n\nclass Lazy<T> {\n  private instance: T | null = null;\n  private initializer: ILazyInitializer<T>;\n\n  constructor(initializer: ILazyInitializer<T>) {\n    this.initializer = initializer;\n  }\n\n  public get handle(): T {\n    console.log(`----- getting handle ------`)\n    if (this.instance == null) {\n      this.instance = this.initializer();\n      console.log(`first-time init of '${this.instance.id}'`)\n    } else {\n      console.log(`fast-grab of '${this.instance.id}'`)\n    }\n    console.log(`----- return handle -------`)\n\n    return this.instance;\n  }\n}\n\nconst load = async () => {\n  const validator = new GraphQLValidator(\"graphql\", \"diagnostics\");\n  validator.start();\n}\n\nwindow.addEventListener('load', load)\n"],"names":["SPACE","GraphQLValidator","constructor","inputID","outputID","input","Lazy","document","getElementById","output","start","validate","handle","addEventListener","graphql","value","toString","graphqlLines","split","console","log","fetch","method","body","json","pretties","diagnostics","length","diagnostic","severity","severityColor","severityEmoji","inner","code","message","labels","l","labelSpan","labelOffset","labelLength","lineIdx","inline","lastLine","graphqlLine","maybeHighlightSpace","maybeLine","i","charAt","push","maybeLineIdx","realHighlightSpace","maybeInline","slice","JSON","stringify","highlight","labelSpace","label","innerHTML","join","instance","initializer","id","load","validator","window"],"sourceRoot":""}